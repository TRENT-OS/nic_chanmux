/*
 * NIC-Chanmux CAmkES Component
 *
 * Copyright (C) 2020-2024, HENSOLDT Cyber GmbH
 * 
 * SPDX-License-Identifier: GPL-2.0-or-later
 *
 * For commercial licensing, contact: info.cyber@hensoldt.net
 *
 * to be used as:
 *
 *   #include "NIC_ChanMux/NIC_ChanMux.camkes"
 *   NIC_ChanMux_COMPONENT_DEFINE(NIC_Chanmux_Driver_1, 16384)
 *   NIC_ChanMux_COMPONENT_DEFINE(NIC_Chanmux_Driver_2, 16384)
 */

#pragma once

import <std_connector.camkes>;
import <if_ChanMux.camkes>;
import <if_OS_Logger.camkes>;
#include <if_OS_Nic.camkes>

#include "ChanMux/ChanMux.camkes"


//------------------------------------------------------------------------------
#define NIC_ChanMux_COMPONENT_DEFINE( \
    _name_, \
    _ringbuffer_size_) \
    \
    component _name_ { \
        control; \
        \
        has mutex mutex_ctrl_channel; \
        \
        /* lower interface to ChanMux ------------------------------------- */ \
        ChanMux_CLIENT_DECLARE_INTERFACE(chanMux) \
        ChanMux_CLIENT_DECLARE_CHANNEL_CONNECTOR(chanMux, ctrl) \
        ChanMux_CLIENT_DECLARE_CHANNEL_CONNECTOR(chanMux, data) \
        \
        /* upper interface as NIC Driver ---------------------------------- */ \
        IF_OS_NIC_PROVIDE(nic, _ringbuffer_size_) \
        \
        /* usage of LogServer is optional ----------------------------------*/ \
        maybe uses      if_OS_Logger  logServer_rpc; \
        maybe dataport  Buf           logServer_port; \
    }


//------------------------------------------------------------------------------
/*
 * Assign the optional logger:
 *
 *      NIC_ChanMux_INSTANCE_CONNECT_OPTIONAL_LOGGER(
 *          <instance>,
 *          <logger>.<rpc>, <logger>.<port_to>
 *      )
 */
#define NIC_ChanMux_INSTANCE_CONNECT_OPTIONAL_LOGGER( \
    _inst_, \
    _rpc_, \
    _port_) \
    \
    connection seL4RPCCall \
        _inst_ ## _logger_rpc( \
            from    _inst_.logServer_rpc, \
            to      _rpc_ \
        ); \
    connection seL4SharedData \
        _inst_ ## _logger_port( \
            from    _inst_.logServer_port, \
            to      _port_ \
        );
